// ==============================================================
// Generated by Vitis HLS v2025.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2025 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="sobel_rgb_axis_sobel_rgb_axis,hls_ip_2025_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a35t-cpg236-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.343125,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=2,HLS_SYN_DSP=0,HLS_SYN_FF=1580,HLS_SYN_LUT=2091,HLS_VERSION=2025_1}" *)

module sobel_rgb_axis (
        ap_clk,
        ap_rst_n,
        in_axis_TDATA,
        in_axis_TVALID,
        in_axis_TREADY,
        in_axis_TKEEP,
        in_axis_TSTRB,
        in_axis_TUSER,
        in_axis_TLAST,
        in_axis_TID,
        in_axis_TDEST,
        out_axis_TDATA,
        out_axis_TVALID,
        out_axis_TREADY,
        out_axis_TKEEP,
        out_axis_TSTRB,
        out_axis_TUSER,
        out_axis_TLAST,
        out_axis_TID,
        out_axis_TDEST,
        s_axi_CTRL_AWVALID,
        s_axi_CTRL_AWREADY,
        s_axi_CTRL_AWADDR,
        s_axi_CTRL_WVALID,
        s_axi_CTRL_WREADY,
        s_axi_CTRL_WDATA,
        s_axi_CTRL_WSTRB,
        s_axi_CTRL_ARVALID,
        s_axi_CTRL_ARREADY,
        s_axi_CTRL_ARADDR,
        s_axi_CTRL_RVALID,
        s_axi_CTRL_RREADY,
        s_axi_CTRL_RDATA,
        s_axi_CTRL_RRESP,
        s_axi_CTRL_BVALID,
        s_axi_CTRL_BREADY,
        s_axi_CTRL_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 6'd1;
parameter    ap_ST_fsm_state2 = 6'd2;
parameter    ap_ST_fsm_state3 = 6'd4;
parameter    ap_ST_fsm_state4 = 6'd8;
parameter    ap_ST_fsm_state5 = 6'd16;
parameter    ap_ST_fsm_state6 = 6'd32;
parameter    C_S_AXI_CTRL_DATA_WIDTH = 32;
parameter    C_S_AXI_CTRL_ADDR_WIDTH = 5;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CTRL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input  [23:0] in_axis_TDATA;
input   in_axis_TVALID;
output   in_axis_TREADY;
input  [2:0] in_axis_TKEEP;
input  [2:0] in_axis_TSTRB;
input  [0:0] in_axis_TUSER;
input  [0:0] in_axis_TLAST;
input  [0:0] in_axis_TID;
input  [0:0] in_axis_TDEST;
output  [23:0] out_axis_TDATA;
output   out_axis_TVALID;
input   out_axis_TREADY;
output  [2:0] out_axis_TKEEP;
output  [2:0] out_axis_TSTRB;
output  [0:0] out_axis_TUSER;
output  [0:0] out_axis_TLAST;
output  [0:0] out_axis_TID;
output  [0:0] out_axis_TDEST;
input   s_axi_CTRL_AWVALID;
output   s_axi_CTRL_AWREADY;
input  [C_S_AXI_CTRL_ADDR_WIDTH - 1:0] s_axi_CTRL_AWADDR;
input   s_axi_CTRL_WVALID;
output   s_axi_CTRL_WREADY;
input  [C_S_AXI_CTRL_DATA_WIDTH - 1:0] s_axi_CTRL_WDATA;
input  [C_S_AXI_CTRL_WSTRB_WIDTH - 1:0] s_axi_CTRL_WSTRB;
input   s_axi_CTRL_ARVALID;
output   s_axi_CTRL_ARREADY;
input  [C_S_AXI_CTRL_ADDR_WIDTH - 1:0] s_axi_CTRL_ARADDR;
output   s_axi_CTRL_RVALID;
input   s_axi_CTRL_RREADY;
output  [C_S_AXI_CTRL_DATA_WIDTH - 1:0] s_axi_CTRL_RDATA;
output  [1:0] s_axi_CTRL_RRESP;
output   s_axi_CTRL_BVALID;
input   s_axi_CTRL_BREADY;
output  [1:0] s_axi_CTRL_BRESP;
output   interrupt;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [31:0] width;
wire   [31:0] height;
reg    line0_ce0;
wire   [7:0] line0_q0;
reg   [9:0] line0_address1;
reg    line0_ce1;
reg    line0_we1;
reg   [7:0] line0_d1;
reg   [9:0] line1_address1;
reg    line1_ce1;
reg    line1_we1;
reg   [7:0] line1_d1;
wire   [7:0] line1_q1;
reg   [31:0] height_read_reg_212;
reg   [31:0] width_read_reg_217;
wire   [30:0] smax_fu_170_p3;
reg   [30:0] smax_reg_224;
wire   [10:0] smax1_fu_184_p3;
reg   [10:0] smax1_reg_229;
wire    ap_CS_fsm_state2;
wire   [40:0] grp_fu_152_p2;
reg   [40:0] bound_reg_244;
wire    ap_CS_fsm_state3;
wire   [31:0] sub_fu_200_p2;
reg   [31:0] sub_reg_249;
wire    ap_CS_fsm_state4;
wire   [31:0] sub133_fu_206_p2;
reg   [31:0] sub133_reg_254;
wire    grp_sobel_rgb_axis_Pipeline_init_cols_fu_102_ap_start;
wire    grp_sobel_rgb_axis_Pipeline_init_cols_fu_102_ap_done;
wire    grp_sobel_rgb_axis_Pipeline_init_cols_fu_102_ap_idle;
wire    grp_sobel_rgb_axis_Pipeline_init_cols_fu_102_ap_ready;
wire   [9:0] grp_sobel_rgb_axis_Pipeline_init_cols_fu_102_line0_address1;
wire    grp_sobel_rgb_axis_Pipeline_init_cols_fu_102_line0_ce1;
wire    grp_sobel_rgb_axis_Pipeline_init_cols_fu_102_line0_we1;
wire   [7:0] grp_sobel_rgb_axis_Pipeline_init_cols_fu_102_line0_d1;
wire   [9:0] grp_sobel_rgb_axis_Pipeline_init_cols_fu_102_line1_address1;
wire    grp_sobel_rgb_axis_Pipeline_init_cols_fu_102_line1_ce1;
wire    grp_sobel_rgb_axis_Pipeline_init_cols_fu_102_line1_we1;
wire   [7:0] grp_sobel_rgb_axis_Pipeline_init_cols_fu_102_line1_d1;
wire    grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_112_ap_start;
wire    grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_112_ap_done;
wire    grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_112_ap_idle;
wire    grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_112_ap_ready;
wire    grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_112_out_axis_TREADY;
wire    grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_112_in_axis_TREADY;
wire   [23:0] grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_112_out_axis_TDATA;
wire    grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_112_out_axis_TVALID;
wire   [2:0] grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_112_out_axis_TKEEP;
wire   [2:0] grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_112_out_axis_TSTRB;
wire   [0:0] grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_112_out_axis_TUSER;
wire   [0:0] grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_112_out_axis_TLAST;
wire   [0:0] grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_112_out_axis_TID;
wire   [0:0] grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_112_out_axis_TDEST;
wire   [9:0] grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_112_line1_address1;
wire    grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_112_line1_ce1;
wire    grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_112_line1_we1;
wire   [7:0] grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_112_line1_d1;
wire   [9:0] grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_112_line0_address0;
wire    grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_112_line0_ce0;
wire   [9:0] grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_112_line0_address1;
wire    grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_112_line0_ce1;
wire    grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_112_line0_we1;
wire   [7:0] grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_112_line0_d1;
reg    grp_sobel_rgb_axis_Pipeline_init_cols_fu_102_ap_start_reg;
reg    grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_112_ap_start_reg;
wire    ap_CS_fsm_state5;
reg   [23:0] out_axis_TDATA_reg;
reg   [2:0] out_axis_TKEEP_reg;
reg   [2:0] out_axis_TSTRB_reg;
reg   [0:0] out_axis_TUSER_reg;
reg   [0:0] out_axis_TLAST_reg;
reg   [0:0] out_axis_TID_reg;
reg   [0:0] out_axis_TDEST_reg;
wire   [30:0] grp_fu_152_p0;
wire   [10:0] grp_fu_152_p1;
wire   [0:0] empty_fu_164_p2;
wire   [30:0] trunc_ln21_1_fu_160_p1;
wire   [0:0] empty_22_fu_178_p2;
wire   [10:0] trunc_ln21_fu_156_p1;
reg    grp_fu_152_ce;
wire    ap_CS_fsm_state6;
wire    regslice_both_out_axis_V_data_V_U_apdone_blk;
reg   [5:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
reg    ap_ST_fsm_state5_blk;
reg    ap_ST_fsm_state6_blk;
wire    regslice_both_in_axis_V_data_V_U_apdone_blk;
wire   [23:0] in_axis_TDATA_int_regslice;
wire    in_axis_TVALID_int_regslice;
reg    in_axis_TREADY_int_regslice;
wire    regslice_both_in_axis_V_data_V_U_ack_in;
wire    regslice_both_in_axis_V_keep_V_U_apdone_blk;
wire   [2:0] in_axis_TKEEP_int_regslice;
wire    regslice_both_in_axis_V_keep_V_U_vld_out;
wire    regslice_both_in_axis_V_keep_V_U_ack_in;
wire    regslice_both_in_axis_V_strb_V_U_apdone_blk;
wire   [2:0] in_axis_TSTRB_int_regslice;
wire    regslice_both_in_axis_V_strb_V_U_vld_out;
wire    regslice_both_in_axis_V_strb_V_U_ack_in;
wire    regslice_both_in_axis_V_user_V_U_apdone_blk;
wire   [0:0] in_axis_TUSER_int_regslice;
wire    regslice_both_in_axis_V_user_V_U_vld_out;
wire    regslice_both_in_axis_V_user_V_U_ack_in;
wire    regslice_both_in_axis_V_last_V_U_apdone_blk;
wire   [0:0] in_axis_TLAST_int_regslice;
wire    regslice_both_in_axis_V_last_V_U_vld_out;
wire    regslice_both_in_axis_V_last_V_U_ack_in;
wire    regslice_both_in_axis_V_id_V_U_apdone_blk;
wire   [0:0] in_axis_TID_int_regslice;
wire    regslice_both_in_axis_V_id_V_U_vld_out;
wire    regslice_both_in_axis_V_id_V_U_ack_in;
wire    regslice_both_in_axis_V_dest_V_U_apdone_blk;
wire   [0:0] in_axis_TDEST_int_regslice;
wire    regslice_both_in_axis_V_dest_V_U_vld_out;
wire    regslice_both_in_axis_V_dest_V_U_ack_in;
reg   [23:0] out_axis_TDATA_int_regslice;
wire    out_axis_TVALID_int_regslice;
wire    out_axis_TREADY_int_regslice;
wire    regslice_both_out_axis_V_data_V_U_vld_out;
wire    regslice_both_out_axis_V_keep_V_U_apdone_blk;
reg   [2:0] out_axis_TKEEP_int_regslice;
wire    regslice_both_out_axis_V_keep_V_U_ack_in_dummy;
wire    regslice_both_out_axis_V_keep_V_U_vld_out;
wire    regslice_both_out_axis_V_strb_V_U_apdone_blk;
reg   [2:0] out_axis_TSTRB_int_regslice;
wire    regslice_both_out_axis_V_strb_V_U_ack_in_dummy;
wire    regslice_both_out_axis_V_strb_V_U_vld_out;
wire    regslice_both_out_axis_V_user_V_U_apdone_blk;
reg   [0:0] out_axis_TUSER_int_regslice;
wire    regslice_both_out_axis_V_user_V_U_ack_in_dummy;
wire    regslice_both_out_axis_V_user_V_U_vld_out;
wire    regslice_both_out_axis_V_last_V_U_apdone_blk;
reg   [0:0] out_axis_TLAST_int_regslice;
wire    regslice_both_out_axis_V_last_V_U_ack_in_dummy;
wire    regslice_both_out_axis_V_last_V_U_vld_out;
wire    regslice_both_out_axis_V_id_V_U_apdone_blk;
reg   [0:0] out_axis_TID_int_regslice;
wire    regslice_both_out_axis_V_id_V_U_ack_in_dummy;
wire    regslice_both_out_axis_V_id_V_U_vld_out;
wire    regslice_both_out_axis_V_dest_V_U_apdone_blk;
reg   [0:0] out_axis_TDEST_int_regslice;
wire    regslice_both_out_axis_V_dest_V_U_ack_in_dummy;
wire    regslice_both_out_axis_V_dest_V_U_vld_out;
wire   [40:0] grp_fu_152_p00;
wire   [40:0] grp_fu_152_p10;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 6'd1;
#0 grp_sobel_rgb_axis_Pipeline_init_cols_fu_102_ap_start_reg = 1'b0;
#0 grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_112_ap_start_reg = 1'b0;
end

sobel_rgb_axis_line0_RAM_2P_BRAM_1R1W #(
    .DataWidth( 8 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
line0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_112_line0_address0),
    .ce0(line0_ce0),
    .q0(line0_q0),
    .address1(line0_address1),
    .ce1(line0_ce1),
    .we1(line0_we1),
    .d1(line0_d1)
);

sobel_rgb_axis_line1_RAM_2P_BRAM_1R1W #(
    .DataWidth( 8 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
line1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address1(line1_address1),
    .ce1(line1_ce1),
    .we1(line1_we1),
    .d1(line1_d1),
    .q1(line1_q1)
);

sobel_rgb_axis_sobel_rgb_axis_Pipeline_init_cols grp_sobel_rgb_axis_Pipeline_init_cols_fu_102(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_sobel_rgb_axis_Pipeline_init_cols_fu_102_ap_start),
    .ap_done(grp_sobel_rgb_axis_Pipeline_init_cols_fu_102_ap_done),
    .ap_idle(grp_sobel_rgb_axis_Pipeline_init_cols_fu_102_ap_idle),
    .ap_ready(grp_sobel_rgb_axis_Pipeline_init_cols_fu_102_ap_ready),
    .width(width_read_reg_217),
    .line0_address1(grp_sobel_rgb_axis_Pipeline_init_cols_fu_102_line0_address1),
    .line0_ce1(grp_sobel_rgb_axis_Pipeline_init_cols_fu_102_line0_ce1),
    .line0_we1(grp_sobel_rgb_axis_Pipeline_init_cols_fu_102_line0_we1),
    .line0_d1(grp_sobel_rgb_axis_Pipeline_init_cols_fu_102_line0_d1),
    .line1_address1(grp_sobel_rgb_axis_Pipeline_init_cols_fu_102_line1_address1),
    .line1_ce1(grp_sobel_rgb_axis_Pipeline_init_cols_fu_102_line1_ce1),
    .line1_we1(grp_sobel_rgb_axis_Pipeline_init_cols_fu_102_line1_we1),
    .line1_d1(grp_sobel_rgb_axis_Pipeline_init_cols_fu_102_line1_d1)
);

sobel_rgb_axis_sobel_rgb_axis_Pipeline_row_loop_col_loop grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_112(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_112_ap_start),
    .ap_done(grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_112_ap_done),
    .ap_idle(grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_112_ap_idle),
    .ap_ready(grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_112_ap_ready),
    .in_axis_TVALID(in_axis_TVALID_int_regslice),
    .out_axis_TREADY(grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_112_out_axis_TREADY),
    .width(width_read_reg_217),
    .bound(bound_reg_244),
    .sub133(sub133_reg_254),
    .in_axis_TDATA(in_axis_TDATA_int_regslice),
    .in_axis_TREADY(grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_112_in_axis_TREADY),
    .in_axis_TKEEP(in_axis_TKEEP_int_regslice),
    .in_axis_TSTRB(in_axis_TSTRB_int_regslice),
    .in_axis_TUSER(in_axis_TUSER_int_regslice),
    .in_axis_TLAST(in_axis_TLAST_int_regslice),
    .in_axis_TID(in_axis_TID_int_regslice),
    .in_axis_TDEST(in_axis_TDEST_int_regslice),
    .sub(sub_reg_249),
    .out_axis_TDATA(grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_112_out_axis_TDATA),
    .out_axis_TVALID(grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_112_out_axis_TVALID),
    .out_axis_TKEEP(grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_112_out_axis_TKEEP),
    .out_axis_TSTRB(grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_112_out_axis_TSTRB),
    .out_axis_TUSER(grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_112_out_axis_TUSER),
    .out_axis_TLAST(grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_112_out_axis_TLAST),
    .out_axis_TID(grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_112_out_axis_TID),
    .out_axis_TDEST(grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_112_out_axis_TDEST),
    .line1_address1(grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_112_line1_address1),
    .line1_ce1(grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_112_line1_ce1),
    .line1_we1(grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_112_line1_we1),
    .line1_d1(grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_112_line1_d1),
    .line1_q1(line1_q1),
    .line0_address0(grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_112_line0_address0),
    .line0_ce0(grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_112_line0_ce0),
    .line0_q0(line0_q0),
    .line0_address1(grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_112_line0_address1),
    .line0_ce1(grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_112_line0_ce1),
    .line0_we1(grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_112_line0_we1),
    .line0_d1(grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_112_line0_d1)
);

sobel_rgb_axis_CTRL_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CTRL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CTRL_DATA_WIDTH ))
CTRL_s_axi_U(
    .AWVALID(s_axi_CTRL_AWVALID),
    .AWREADY(s_axi_CTRL_AWREADY),
    .AWADDR(s_axi_CTRL_AWADDR),
    .WVALID(s_axi_CTRL_WVALID),
    .WREADY(s_axi_CTRL_WREADY),
    .WDATA(s_axi_CTRL_WDATA),
    .WSTRB(s_axi_CTRL_WSTRB),
    .ARVALID(s_axi_CTRL_ARVALID),
    .ARREADY(s_axi_CTRL_ARREADY),
    .ARADDR(s_axi_CTRL_ARADDR),
    .RVALID(s_axi_CTRL_RVALID),
    .RREADY(s_axi_CTRL_RREADY),
    .RDATA(s_axi_CTRL_RDATA),
    .RRESP(s_axi_CTRL_RRESP),
    .BVALID(s_axi_CTRL_BVALID),
    .BREADY(s_axi_CTRL_BREADY),
    .BRESP(s_axi_CTRL_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .width(width),
    .height(height),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

sobel_rgb_axis_mul_31ns_11ns_41_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 41 ))
mul_31ns_11ns_41_2_1_U30(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_152_p0),
    .din1(grp_fu_152_p1),
    .ce(grp_fu_152_ce),
    .dout(grp_fu_152_p2)
);

sobel_rgb_axis_regslice_both #(
    .DataWidth( 24 ))
regslice_both_in_axis_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_axis_TDATA),
    .vld_in(in_axis_TVALID),
    .ack_in(regslice_both_in_axis_V_data_V_U_ack_in),
    .data_out(in_axis_TDATA_int_regslice),
    .vld_out(in_axis_TVALID_int_regslice),
    .ack_out(in_axis_TREADY_int_regslice),
    .apdone_blk(regslice_both_in_axis_V_data_V_U_apdone_blk)
);

sobel_rgb_axis_regslice_both #(
    .DataWidth( 3 ))
regslice_both_in_axis_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_axis_TKEEP),
    .vld_in(in_axis_TVALID),
    .ack_in(regslice_both_in_axis_V_keep_V_U_ack_in),
    .data_out(in_axis_TKEEP_int_regslice),
    .vld_out(regslice_both_in_axis_V_keep_V_U_vld_out),
    .ack_out(in_axis_TREADY_int_regslice),
    .apdone_blk(regslice_both_in_axis_V_keep_V_U_apdone_blk)
);

sobel_rgb_axis_regslice_both #(
    .DataWidth( 3 ))
regslice_both_in_axis_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_axis_TSTRB),
    .vld_in(in_axis_TVALID),
    .ack_in(regslice_both_in_axis_V_strb_V_U_ack_in),
    .data_out(in_axis_TSTRB_int_regslice),
    .vld_out(regslice_both_in_axis_V_strb_V_U_vld_out),
    .ack_out(in_axis_TREADY_int_regslice),
    .apdone_blk(regslice_both_in_axis_V_strb_V_U_apdone_blk)
);

sobel_rgb_axis_regslice_both #(
    .DataWidth( 1 ))
regslice_both_in_axis_V_user_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_axis_TUSER),
    .vld_in(in_axis_TVALID),
    .ack_in(regslice_both_in_axis_V_user_V_U_ack_in),
    .data_out(in_axis_TUSER_int_regslice),
    .vld_out(regslice_both_in_axis_V_user_V_U_vld_out),
    .ack_out(in_axis_TREADY_int_regslice),
    .apdone_blk(regslice_both_in_axis_V_user_V_U_apdone_blk)
);

sobel_rgb_axis_regslice_both #(
    .DataWidth( 1 ))
regslice_both_in_axis_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_axis_TLAST),
    .vld_in(in_axis_TVALID),
    .ack_in(regslice_both_in_axis_V_last_V_U_ack_in),
    .data_out(in_axis_TLAST_int_regslice),
    .vld_out(regslice_both_in_axis_V_last_V_U_vld_out),
    .ack_out(in_axis_TREADY_int_regslice),
    .apdone_blk(regslice_both_in_axis_V_last_V_U_apdone_blk)
);

sobel_rgb_axis_regslice_both #(
    .DataWidth( 1 ))
regslice_both_in_axis_V_id_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_axis_TID),
    .vld_in(in_axis_TVALID),
    .ack_in(regslice_both_in_axis_V_id_V_U_ack_in),
    .data_out(in_axis_TID_int_regslice),
    .vld_out(regslice_both_in_axis_V_id_V_U_vld_out),
    .ack_out(in_axis_TREADY_int_regslice),
    .apdone_blk(regslice_both_in_axis_V_id_V_U_apdone_blk)
);

sobel_rgb_axis_regslice_both #(
    .DataWidth( 1 ))
regslice_both_in_axis_V_dest_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_axis_TDEST),
    .vld_in(in_axis_TVALID),
    .ack_in(regslice_both_in_axis_V_dest_V_U_ack_in),
    .data_out(in_axis_TDEST_int_regslice),
    .vld_out(regslice_both_in_axis_V_dest_V_U_vld_out),
    .ack_out(in_axis_TREADY_int_regslice),
    .apdone_blk(regslice_both_in_axis_V_dest_V_U_apdone_blk)
);

sobel_rgb_axis_regslice_both #(
    .DataWidth( 24 ))
regslice_both_out_axis_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(out_axis_TDATA_int_regslice),
    .vld_in(grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_112_out_axis_TVALID),
    .ack_in(out_axis_TREADY_int_regslice),
    .data_out(out_axis_TDATA),
    .vld_out(regslice_both_out_axis_V_data_V_U_vld_out),
    .ack_out(out_axis_TREADY),
    .apdone_blk(regslice_both_out_axis_V_data_V_U_apdone_blk)
);

sobel_rgb_axis_regslice_both #(
    .DataWidth( 3 ))
regslice_both_out_axis_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(out_axis_TKEEP_int_regslice),
    .vld_in(grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_112_out_axis_TVALID),
    .ack_in(regslice_both_out_axis_V_keep_V_U_ack_in_dummy),
    .data_out(out_axis_TKEEP),
    .vld_out(regslice_both_out_axis_V_keep_V_U_vld_out),
    .ack_out(out_axis_TREADY),
    .apdone_blk(regslice_both_out_axis_V_keep_V_U_apdone_blk)
);

sobel_rgb_axis_regslice_both #(
    .DataWidth( 3 ))
regslice_both_out_axis_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(out_axis_TSTRB_int_regslice),
    .vld_in(grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_112_out_axis_TVALID),
    .ack_in(regslice_both_out_axis_V_strb_V_U_ack_in_dummy),
    .data_out(out_axis_TSTRB),
    .vld_out(regslice_both_out_axis_V_strb_V_U_vld_out),
    .ack_out(out_axis_TREADY),
    .apdone_blk(regslice_both_out_axis_V_strb_V_U_apdone_blk)
);

sobel_rgb_axis_regslice_both #(
    .DataWidth( 1 ))
regslice_both_out_axis_V_user_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(out_axis_TUSER_int_regslice),
    .vld_in(grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_112_out_axis_TVALID),
    .ack_in(regslice_both_out_axis_V_user_V_U_ack_in_dummy),
    .data_out(out_axis_TUSER),
    .vld_out(regslice_both_out_axis_V_user_V_U_vld_out),
    .ack_out(out_axis_TREADY),
    .apdone_blk(regslice_both_out_axis_V_user_V_U_apdone_blk)
);

sobel_rgb_axis_regslice_both #(
    .DataWidth( 1 ))
regslice_both_out_axis_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(out_axis_TLAST_int_regslice),
    .vld_in(grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_112_out_axis_TVALID),
    .ack_in(regslice_both_out_axis_V_last_V_U_ack_in_dummy),
    .data_out(out_axis_TLAST),
    .vld_out(regslice_both_out_axis_V_last_V_U_vld_out),
    .ack_out(out_axis_TREADY),
    .apdone_blk(regslice_both_out_axis_V_last_V_U_apdone_blk)
);

sobel_rgb_axis_regslice_both #(
    .DataWidth( 1 ))
regslice_both_out_axis_V_id_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(out_axis_TID_int_regslice),
    .vld_in(grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_112_out_axis_TVALID),
    .ack_in(regslice_both_out_axis_V_id_V_U_ack_in_dummy),
    .data_out(out_axis_TID),
    .vld_out(regslice_both_out_axis_V_id_V_U_vld_out),
    .ack_out(out_axis_TREADY),
    .apdone_blk(regslice_both_out_axis_V_id_V_U_apdone_blk)
);

sobel_rgb_axis_regslice_both #(
    .DataWidth( 1 ))
regslice_both_out_axis_V_dest_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(out_axis_TDEST_int_regslice),
    .vld_in(grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_112_out_axis_TVALID),
    .ack_in(regslice_both_out_axis_V_dest_V_U_ack_in_dummy),
    .data_out(out_axis_TDEST),
    .vld_out(regslice_both_out_axis_V_dest_V_U_vld_out),
    .ack_out(out_axis_TREADY),
    .apdone_blk(regslice_both_out_axis_V_dest_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_sobel_rgb_axis_Pipeline_init_cols_fu_102_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            grp_sobel_rgb_axis_Pipeline_init_cols_fu_102_ap_start_reg <= 1'b1;
        end else if ((grp_sobel_rgb_axis_Pipeline_init_cols_fu_102_ap_ready == 1'b1)) begin
            grp_sobel_rgb_axis_Pipeline_init_cols_fu_102_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_112_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state4)) begin
            grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_112_ap_start_reg <= 1'b1;
        end else if ((grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_112_ap_ready == 1'b1)) begin
            grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_112_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        bound_reg_244 <= grp_fu_152_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        height_read_reg_212 <= height;
        smax1_reg_229 <= smax1_fu_184_p3;
        smax_reg_224 <= smax_fu_170_p3;
        width_read_reg_217 <= width;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_112_out_axis_TVALID == 1'b1))) begin
        out_axis_TDATA_reg <= grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_112_out_axis_TDATA;
        out_axis_TDEST_reg <= grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_112_out_axis_TDEST;
        out_axis_TID_reg <= grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_112_out_axis_TID;
        out_axis_TKEEP_reg <= grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_112_out_axis_TKEEP;
        out_axis_TLAST_reg <= grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_112_out_axis_TLAST;
        out_axis_TSTRB_reg <= grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_112_out_axis_TSTRB;
        out_axis_TUSER_reg <= grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_112_out_axis_TUSER;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        sub133_reg_254 <= sub133_fu_206_p2;
        sub_reg_249 <= sub_fu_200_p2;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((grp_sobel_rgb_axis_Pipeline_init_cols_fu_102_ap_done == 1'b0)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

always @ (*) begin
    if ((grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_112_ap_done == 1'b0)) begin
        ap_ST_fsm_state5_blk = 1'b1;
    end else begin
        ap_ST_fsm_state5_blk = 1'b0;
    end
end

always @ (*) begin
    if ((regslice_both_out_axis_V_data_V_U_apdone_blk == 1'b1)) begin
        ap_ST_fsm_state6_blk = 1'b1;
    end else begin
        ap_ST_fsm_state6_blk = 1'b0;
    end
end

always @ (*) begin
    if (((regslice_both_out_axis_V_data_V_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state6))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((regslice_both_out_axis_V_data_V_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state6))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((1'b1 == ap_CS_fsm_state2) & (grp_sobel_rgb_axis_Pipeline_init_cols_fu_102_ap_done == 1'b1)))) begin
        grp_fu_152_ce = 1'b1;
    end else begin
        grp_fu_152_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        in_axis_TREADY_int_regslice = grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_112_in_axis_TREADY;
    end else begin
        in_axis_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        line0_address1 = grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_112_line0_address1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        line0_address1 = grp_sobel_rgb_axis_Pipeline_init_cols_fu_102_line0_address1;
    end else begin
        line0_address1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        line0_ce0 = grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_112_line0_ce0;
    end else begin
        line0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        line0_ce1 = grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_112_line0_ce1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        line0_ce1 = grp_sobel_rgb_axis_Pipeline_init_cols_fu_102_line0_ce1;
    end else begin
        line0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        line0_d1 = grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_112_line0_d1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        line0_d1 = grp_sobel_rgb_axis_Pipeline_init_cols_fu_102_line0_d1;
    end else begin
        line0_d1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        line0_we1 = grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_112_line0_we1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        line0_we1 = grp_sobel_rgb_axis_Pipeline_init_cols_fu_102_line0_we1;
    end else begin
        line0_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        line1_address1 = grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_112_line1_address1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        line1_address1 = grp_sobel_rgb_axis_Pipeline_init_cols_fu_102_line1_address1;
    end else begin
        line1_address1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        line1_ce1 = grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_112_line1_ce1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        line1_ce1 = grp_sobel_rgb_axis_Pipeline_init_cols_fu_102_line1_ce1;
    end else begin
        line1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        line1_d1 = grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_112_line1_d1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        line1_d1 = grp_sobel_rgb_axis_Pipeline_init_cols_fu_102_line1_d1;
    end else begin
        line1_d1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        line1_we1 = grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_112_line1_we1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        line1_we1 = grp_sobel_rgb_axis_Pipeline_init_cols_fu_102_line1_we1;
    end else begin
        line1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_112_out_axis_TVALID == 1'b1))) begin
        out_axis_TDATA_int_regslice = grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_112_out_axis_TDATA;
    end else begin
        out_axis_TDATA_int_regslice = out_axis_TDATA_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_112_out_axis_TVALID == 1'b1))) begin
        out_axis_TDEST_int_regslice = grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_112_out_axis_TDEST;
    end else begin
        out_axis_TDEST_int_regslice = out_axis_TDEST_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_112_out_axis_TVALID == 1'b1))) begin
        out_axis_TID_int_regslice = grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_112_out_axis_TID;
    end else begin
        out_axis_TID_int_regslice = out_axis_TID_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_112_out_axis_TVALID == 1'b1))) begin
        out_axis_TKEEP_int_regslice = grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_112_out_axis_TKEEP;
    end else begin
        out_axis_TKEEP_int_regslice = out_axis_TKEEP_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_112_out_axis_TVALID == 1'b1))) begin
        out_axis_TLAST_int_regslice = grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_112_out_axis_TLAST;
    end else begin
        out_axis_TLAST_int_regslice = out_axis_TLAST_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_112_out_axis_TVALID == 1'b1))) begin
        out_axis_TSTRB_int_regslice = grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_112_out_axis_TSTRB;
    end else begin
        out_axis_TSTRB_int_regslice = out_axis_TSTRB_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_112_out_axis_TVALID == 1'b1))) begin
        out_axis_TUSER_int_regslice = grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_112_out_axis_TUSER;
    end else begin
        out_axis_TUSER_int_regslice = out_axis_TUSER_reg;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (grp_sobel_rgb_axis_Pipeline_init_cols_fu_102_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_112_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((regslice_both_out_axis_V_data_V_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign empty_22_fu_178_p2 = (($signed(width) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign empty_fu_164_p2 = (($signed(height) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign grp_fu_152_p0 = grp_fu_152_p00;

assign grp_fu_152_p00 = smax_reg_224;

assign grp_fu_152_p1 = grp_fu_152_p10;

assign grp_fu_152_p10 = smax1_reg_229;

assign grp_sobel_rgb_axis_Pipeline_init_cols_fu_102_ap_start = grp_sobel_rgb_axis_Pipeline_init_cols_fu_102_ap_start_reg;

assign grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_112_ap_start = grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_112_ap_start_reg;

assign grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_112_out_axis_TREADY = (out_axis_TREADY_int_regslice & ap_CS_fsm_state5);

assign in_axis_TREADY = regslice_both_in_axis_V_data_V_U_ack_in;

assign out_axis_TVALID = regslice_both_out_axis_V_data_V_U_vld_out;

assign out_axis_TVALID_int_regslice = grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_112_out_axis_TVALID;

assign smax1_fu_184_p3 = ((empty_22_fu_178_p2[0:0] == 1'b1) ? trunc_ln21_fu_156_p1 : 11'd0);

assign smax_fu_170_p3 = ((empty_fu_164_p2[0:0] == 1'b1) ? trunc_ln21_1_fu_160_p1 : 31'd0);

assign sub133_fu_206_p2 = ($signed(height_read_reg_212) + $signed(32'd4294967295));

assign sub_fu_200_p2 = ($signed(width_read_reg_217) + $signed(32'd4294967295));

assign trunc_ln21_1_fu_160_p1 = height[30:0];

assign trunc_ln21_fu_156_p1 = width[10:0];

endmodule //sobel_rgb_axis
